import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
// import { createContext } from "react";
import { ThemeProvider } from "@/components/theme-provider";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

// _________________________________________

// type Theme = {
//   colors: {
//     primary: string;
//     secondary: string;
//   };
// };

// const defaultTheme: Theme = {
//   colors: {
//     primary: "#007bff",
//     secondary: "#6c757d",
//   },
// };

// const ThemeContext = createContext<Theme>(defaultTheme);

// _________________________________________

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      {/* <ThemeContext.Provider value={defaultTheme}> */}
      <ThemeProvider>
        <body
          className={`${geistSans.variable} ${geistMono.variable} antialiased`}
        >
          {children}
        </body>
      </ThemeProvider>
      {/* </ThemeContext.Provider> */}
    </html>
  );
}